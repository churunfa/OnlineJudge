<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

        <bean name="delCustomTestJob" class="org.springframework.scheduling.quartz.JobDetailFactoryBean">
                <property  name="name" value="delCustomTest"></property>
                <property  name="group" value="delGroup"></property>
                <property name="jobClass" value="OnlineJudge.web.servlet.job.DelCustomTest"></property>
                <property name="durability" value="true"></property>
        </bean>
        <bean id="delCustomTestTrigger" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
                <property name="name" value="delCustomTest"></property>
                <property name="group" value="delGroup"></property>
                <property name="jobDetail" ref="delCustomTestJob"></property>
<!--                <property name="cronExpression" value="*/2 * * * * ?"></property>-->
                <property name="cronExpression" value="0 30 3 * * ?"></property>
        </bean>
        <bean id="scheduler" class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
                <property name="triggers">
                        <list>
                                <ref bean="delCustomTestTrigger"></ref>
                        </list>
                </property>
                <property name="quartzProperties">
                        <value>
                                # 指定调度器名称，实际类型为：QuartzScheduler
                                org.quartz.scheduler.instanceName = MyScheduler
                                # 指定连接池
                                org.quartz.threadPool.class = org.quartz.simpl.SimpleThreadPool
                                # 连接池线程数量
                                org.quartz.threadPool.threadCount  = 11
                                # 优先级
                                org.quartz.threadPool.threadPriority = 5
                                # 不持久化job
                                # org.quartz.jobStore.class = org.quartz.simpl.RAMJobStore
                                #持久化
                                org.quartz.jobStore.class = org.quartz.impl.jdbcjobstore.JobStoreTX
                                # quartz表的前缀
                                org.quartz.jobStore.tablePrefix = QRTZ_
                        </value>
                </property>
                <property name="dataSource" ref="druid"/>
        </bean>
        <context:property-placeholder location="classpath:quartz_jdbc.properties"/>
        <bean id="druid" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
                <property name="url" value="${jdbc.url}"/>
                <property name="username" value="${jdbc.username}"/>
                <property name="password" value="${jdbc.password}"/>

                <property name="initialSize" value="${jdbc.initialSize}"/>
                <property name="minIdle" value="1"/>
                <property name="maxActive" value="${jdbc.maxActive}"/>

                <property name="maxWait" value="${jdbc.maxWait}"/>

                <property name="timeBetweenEvictionRunsMillis" value="600000"/>

                <property name="minEvictableIdleTimeMillis" value="300000"/>
                <property name="validationQuery" value="SELECT 'x'"/>
                <property name="testWhileIdle" value="true"/>
                <property name="testOnBorrow" value="false"/>
                <property name="testOnReturn" value="false"/>

        </bean>
</beans>